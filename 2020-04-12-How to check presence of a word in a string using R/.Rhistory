getwd()
# Load required Libraries
#install.packages("stringr")
library(stringr)
list.files("../dataset")
list.files("../datasets/")
list.files("../../datasets/")
# list.files("../../datasets/marvel_movies.csv")
movies = read.csv("../../datasets/marvel_movies.csv")
movies
library(dplyr)
library(dplyr)
# list.files("../../datasets/marvel_movies.csv")
movies = read_csv("../../datasets/marvel_movies.csv")
library(dplyr)
# list.files("../../datasets/marvel_movies.csv")
movies = read_csv("../../datasets/marvel_movies.csv")
# list.files("../../datasets/marvel_movies.csv")
movies = read.csv("../../datasets/marvel_movies.csv")
movies
movies$Film
# Load required Libraries
#install.packages("stringr")
library(stringr)
library(dplyr)
# list.files("../../datasets/marvel_movies.csv")
movies = read.csv("../../datasets/marvel_movies.csv")
movies
movies$Film
string
string = movies$Film[15]
string = movies$Film[15]
string
tibble(string)
string
library(stringr)
movies = read.csv("../../datasets/marvel_movies.csv")
movies
string = movies$Film[5]
string = movies$Film[5]
string
movies
movies$Film
movies = read.csv("../../datasets/marvel_movies.csv", stringsAsFactors = False)
movies = read.csv("../../datasets/marvel_movies.csv", stringsAsFactors = FALSE)
movies$Film
View(movies)
View(movies)
movies$Film
movies$Film
string = movies$Film
string = movies$Film[1:10]
string
string
string = tolower(movies$Film[1:10])
## Find
str_detect(string, "captain")
string
## Find
names(str_detect(string, "captain"))
## Find
str_detect(string, "captain")
str_subset(string, "captain")
## check the presence of the word "thor"
str_detect(string)
string
## check the presence of the word "thor"
str_detect(string, "thor")
string[str_detect(string, "thor")]
str_subset(string, "thor")
dput(movies$Film)
#Creting Scenario
movies = c("Iron Man", "The Incredible Hulk", "Iron Man 2", "Thor", "Captain America: The First Avenger",
"Marvel's The Avengers", "Iron Man 3", "Thor: The Dark World",
"Captain America: The Winter Soldier", "Guardians of the Galaxy",
"Avengers: Age of Ultron", "Ant-Man", "Captain America: Civil War",
"Doctor Strange", "Guardians of the Galaxy Vol. 2", "Spider-Man: Homecoming",
"Thor: Ragnarok", "Black Panther", "Avengers: Infinity War",
"Ant-Man and the Wasp", "Captain Marvel", "Avengers: Endgame",
"Spider-Man: Far From Home")
#Creting Scenario
movies = read.csv("../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
#Creting Scenario
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
string = tolower(movies$Film[1:10])
string
## Check the presence of the work "captain"
str_detect(string, "captain")
names(movies)
dput(names(movies))
names(movies) = c("Film", "US_release_date", "Directors", "Screenwriters",
"Producers")
movies = movies[, c("File", "US_release_date")]
movies
movies = movies[, c("File", "US_release_date")]
movies = movies[, c("Film", "US_release_date")]
movies
movies = movies[, c("Film", "US_release_date")]
movies
movies
View(movies)
Vies(movies)
View(movies)
movies
View(movies)
View(movies)
# =====================================================
# Creting Scenario
# =====================================================
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
View(movies)
string
string = tolower(movies$Film[1:10])
string
string
# =====================================================
# Using Base R
# =====================================================
grepl("captain", string)
grepl("captain", string, value=TRUE)
?grepl
# =====================================================
# Using Base R
# =====================================================
grep("captain", string)
grep("captain", string, value=TRUE)
# =====================================================
# Using Base R
# =====================================================
str_locate(string, "captain")
# =====================================================
# Using Base R
# =====================================================
str_which(string, "captain")
grep("captain", string)
grep("captain", string, value=TRUE)
grepl("captain", string)
grep("captain", string) #str_which
grep("captain", string, value=TRUE) #str_subset
grepl("captain", string) #str_detect
library(stringr)
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
names(movies) = c("Film", "US_release_date", "Directors", "Screenwriters",
"Producers")
View(movies)
string = tolower(movies$Film[1:10])
string
## Check the presence of the work "captain"
str_detect(string, "captain")
# =====================================================
# Using Base R
# =====================================================
str_which(string, "captain")
## check the presence of the word "thor"
str_detect(string, "thor")
str_subset(string, "thor")
# =====================================================
# Using Base R
# =====================================================
str_which(string, "captain")
str_which(string, "trump")
len(str_which(string, "trump"))
length(str_which(string, "trump"))
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
names(movies) = c("Film", "US_release_date", "Directors", "Screenwriters",
"Producers")
View(movies)
string = tolower(movies$Movie[1:10])
string
library(stringr)
# =====================================================
# Creting Scenario
# =====================================================
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
names(movies) = c("Movie", "US_release_date", "Directors", "Screenwriters",
"Producers")
View(movies)
string = tolower(movies$Movie[1:10])
string
string[str_which(string, "thor")]
string[str_detect(string, "thor")]
str_which(string, "thor")
# =====================================================
# Using Base R
# =====================================================
grep("captain", string) #str_which
grepl("captain", string) #str_detect
grep("captain", string, value=TRUE) #str_subset
# =====================================================
# Using Base R
# =====================================================
grepl("captain", string) #equivalent str_detect
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
names(movies) = c("Movie", "US_release_date",
"Directors", "Screenwriters",
"Producers")
View(movies)
strings = tolower(movies$Movie[1:10])
strings
strings
# 1. Detect the presence of a word (pattern) match in a string/strings
str_detect(strings, "captain")
#Find the indices of strings that contains the word(pattern) match
str_which(strings, "captain")
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
names(movies) = c("Movie", "US_release_date",
"Directors", "Screenwriters",
"Producers")
View(movies)
strings = tolower(movies$Movie[1:10])
strings
strings
dput(strings)
# 1. Detect the presence of a word (pattern) match in a string/strings
?str_detect
library(stringr)
# 1. Detect the presence of a word (pattern) match in a string/strings
?str_detect
# =====================================================
# Using Base R
# =====================================================
?grepl
grepl("thor", strings)
grepl("captain", strings) #equivalent str_detect
strings
strings
grepl("thor", strings, value=TRUE)
grepl("thor", strings)
grep("thor", strings)
mtcars["mpg"]
mtcars["mpg"][1:10]
mtcars["mpg"][1:10,]
head(economics)
library(ggplot2)
head(economics)
library(gapminder)
head(gapminder)
gapminder %>% count(continent, country) %>% count(continent)
library(dplyr)
gapminder %>% count(continent, country) %>% count(continent)
gapminder %>% count(continent, country) %>% count(continent)
??str_detect
?str_detect
# Load the library
library(stringr)
# Load the library
library(stringr)
movies = read.csv("../../datasets/marvel_movies.csv",
stringsAsFactors = FALSE)
names(movies) = c("Movie", "US_release_date",
"Directors", "Screenwriters",
"Producers")
View(movies)
strings = tolower(movies$Movie[1:10])
strings
?str_detect
## check the presence of the word "captain"
str_detect(strings, "captain")
strings
## check the presence of the word "thor"
str_detect(strings, "thor")
# syntax : grepl(pattern, string)
# find "captain"
grepl("captain", strings) #equivalent str_detect
# syntax : grepl(pattern, string)
# find "captain"
grepl("captain", strings) #equivalent str_detect
strings
# find "thor"
grepl("thor", strings)
# Summary
# word ="captain"
strings
# Summary
word ="captain"
# using stringr package
str_detect(strings, word)
# using Base R
grepl(word, strings)
